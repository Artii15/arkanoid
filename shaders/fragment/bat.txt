#version 130

in vec2 iTexCoord; // Współrzędne teksturowania interpolowane
in vec4 iNormal;
in vec4 iVertex;

out vec4 pixelColor; //Zmienna wyjsciowa fragment shadera. Zapisuje sie do niej ostateczny (prawie) kolor piksela

uniform sampler2D textureMap0;
uniform vec4 lightPosition;
uniform mat4 M;
uniform mat4 G;
uniform mat4 V;

void main(void) {
	vec4 materialColor = texture(textureMap0, iTexCoord);
	
	vec4 l = normalize(V*(vec4(0,0,10,1)-M*iVertex));
	vec4 n = normalize(G*iNormal);
	// Światło rozproszone
	float nlCos = max(0.0, dot(n, l));
	vec3 diffuse = nlCos*materialColor.rgb*vec3(1,1,1);

	pixelColor.rgb = diffuse;
	
	pixelColor.a = 1;
}
