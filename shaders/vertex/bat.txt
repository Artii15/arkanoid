#version 130

#define MAX_LIGHTS 1 // Zawsze ustawiać <= liczbie świateł z game.cpp

struct light{
	vec4 ambient;
	vec4 diffuse;
	vec4 specular;
	vec4 position;
	int shininess;
	float k;
};

//Zmienne jednorodne
uniform mat4 MVP;
uniform mat4 G;
uniform mat4 V;
uniform mat4 M;

uniform light lights[MAX_LIGHTS];

//Atrybuty
in vec4 vertex; 
in vec2 texCoord;  
in vec4 normal; 

out vec2 iTexCoord; // Współrzędne tekstur do interpolacji 
out vec4 iN;
out vec4 iL;
out vec4 iV;
out float iDist;

void main(void) {
	iTexCoord = texCoord; // Współrzędne teksturowania
	vec4 worldPosition = M*vertex;
	
	// Poniższe interpolowane wektory są w przestrzeni oka
	iN = normalize( G*normal); // Wektor normalny
	iL = normalize( V*(lights[0].position - worldPosition) ); // Wektor do światła
	iV = normalize( vec4(0,0,0,1) - V*worldPosition ); // Wektor do obserwatora
	iDist = length(lights[0].position - vertex);
	
	gl_Position = MVP*vertex;
}
