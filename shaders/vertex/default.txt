#version 130

#define MAX_LIGHTS 9 // Zawsze ustawiać <= liczbie świateł z game.cpp

struct light{
	vec4 ambient;
	vec4 diffuse;
	vec4 specular;
	vec4 position;
	int shininess;
	float k;
};

//Zmienne jednorodne
uniform mat4 MVP;
uniform mat4 G;
uniform mat4 V;
uniform mat4 M;

uniform light lights[MAX_LIGHTS];

//Atrybuty
in vec4 vertex; 
in vec2 texCoord;  
in vec4 normal; 

out vec2 iTexCoord; // Współrzędne tekstur do interpolacji 
out vec4 iN;
out vec4 iV;
out vec4 iLs[MAX_LIGHTS];
out float iDists[MAX_LIGHTS];

void main(void) {
	iTexCoord = texCoord; // Współrzędne teksturowania
	vec4 worldPosition = M*vertex;
	
	// Poniższe interpolowane wektory są w przestrzeni oka
	iN = normalize( G*normal); // Wektor normalny
	iV = normalize( vec4(0,0,0,1) - V*worldPosition ); // Wektor do obserwatora
	
	for(int i=0; i<MAX_LIGHTS; i++){
		iLs[i] = normalize( V*(lights[i].position - worldPosition) ); // Wektor do światła
		iDists[i] = length(lights[i].position - vertex); // Odległość do światła
	}
	
	gl_Position = MVP*vertex;
}
